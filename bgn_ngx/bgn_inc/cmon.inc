/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@163.com
* QQ: 2796796
*
*******************************************************************************/
#ifndef _CMON_INC
#define _CMON_INC

#include "findex.inc"

FUNC_ADDR_NODE g_cmon_func_addr_list[ ] = {
{
/* -- void cmon_print_module_status(const UINT32 cmon_md_id, LOG *log); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_print_module_status",
/*func index      */     FI_cmon_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_free_module_static_mem(const UINT32 cmon_md_id); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_free_module_static_mem",
/*func index      */     FI_cmon_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_start(); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_start",
/*func index      */     FI_cmon_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_void,},
/*func para val   */     0, 0, {0},
},
{
/* -- void cmon_end(const UINT32 cmon_md_id); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_end",
/*func index      */     FI_cmon_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- void cmon_node_print(const UINT32 cmon_md_id, LOG *log); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_node_print,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_node_print",
/*func index      */     FI_cmon_node_print,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_add_node(const UINT32 cmon_md_id, const CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_add_node,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_add_node",
/*func index      */     FI_cmon_add_node,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_del_node(const UINT32 cmon_md_id, const CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_del_node,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_del_node",
/*func index      */     FI_cmon_del_node,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_set_node_up(const UINT32 cmon_md_id, const CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_set_node_up,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_set_node_up",
/*func index      */     FI_cmon_set_node_up,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_set_node_down(const UINT32 cmon_md_id, const CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_set_node_down,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_set_node_down",
/*func index      */     FI_cmon_set_node_down,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_check_node_up(const UINT32 cmon_md_id, const CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_check_node_up,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_check_node_up",
/*func index      */     FI_cmon_check_node_up,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_get_node_by_pos(const UINT32 cmon_md_id, const UINT32 pos, CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_get_node_by_pos,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_get_node_by_pos",
/*func index      */     FI_cmon_get_node_by_pos,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_get_node_by_tcid(const UINT32 cmon_md_id, const UINT32 tcid, const UINT32 modi, CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_get_node_by_tcid,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_get_node_by_tcid",
/*func index      */     FI_cmon_get_node_by_tcid,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- void cmon_list_nodes(const UINT32 cmon_md_id, CSTRING *cstr); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_list_nodes,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_list_nodes",
/*func index      */     FI_cmon_list_nodes,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_count_nodes(const UINT32 cmon_md_id, UINT32 *num); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_count_nodes,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_count_nodes",
/*func index      */     FI_cmon_count_nodes,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_get_node_by_hash(const UINT32 cmon_md_id, const UINT32 hash, CMON_NODE *cmon_node); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_get_node_by_hash,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_get_node_by_hash",
/*func index      */     FI_cmon_get_node_by_hash,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_add_hot_path(const UINT32 cmon_md_id, const CSTRING *path); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_add_hot_path,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_add_hot_path",
/*func index      */     FI_cmon_add_hot_path,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_del_hot_path(const UINT32 cmon_md_id, const CSTRING *path); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_del_hot_path,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_del_hot_path",
/*func index      */     FI_cmon_del_hot_path,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_exist_hot_path(const UINT32 cmon_md_id, const CSTRING *path); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_exist_hot_path,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_exist_hot_path",
/*func index      */     FI_cmon_exist_hot_path,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- void cmon_print_hot_paths(const UINT32 cmon_md_id, LOG *log); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_print_hot_paths,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_print_hot_paths",
/*func index      */     FI_cmon_print_hot_paths,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_load_hot_paths(const UINT32 cmon_md_id, const CSTRING *path); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_load_hot_paths,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_load_hot_paths",
/*func index      */     FI_cmon_load_hot_paths,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL cmon_unload_hot_paths(const UINT32 cmon_md_id); -- */
/*func module     */     MD_CMON,
/*func logic addr */     (UINT32)cmon_unload_hot_paths,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_unload_hot_paths",
/*func index      */     FI_cmon_unload_hot_paths,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_cmon_func_addr_list_len = sizeof(g_cmon_func_addr_list)/sizeof(g_cmon_func_addr_list[0]);
#endif/*_CMON_INC*/

